{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","index.js"],"names":["Card","props","id","name","email","className","src","alt","CardList","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","App","onSearchChange","event","setState","searchField","target","value","state","fetch","then","response","json","users","console","log","this","filteredRobots","filter","robot","toLowerCase","includes","length","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAkBeA,EAfF,SAACC,GAAW,IACfC,EAAoBD,EAApBC,GAAIC,EAAgBF,EAAhBE,KAAMC,EAAUH,EAAVG,MAClB,OACE,cAAC,WAAD,UACE,sBAAKC,UAAU,sDAAf,UACA,qBAAKC,IAAG,+BAA0BJ,EAA1B,YAAwCK,IAAI,UACpD,gCACE,6BAAKJ,IACL,4BAAIC,aCUGI,EAjBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACjB,OACE,8BAEIA,EAAOC,KAAI,SAACC,EAAMC,GAChB,OAAO,cAAC,EAAD,CAELV,GAAIO,EAAOG,GAAGV,GACdC,KAAMM,EAAOG,GAAGT,KAChBC,MAAOK,EAAOG,GAAGR,OAHZQ,SCKFC,EAbG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAClB,OACE,qBAAKT,UAAU,MAAf,SACE,uBACEA,UAAU,sCACVU,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCCHI,EARA,SAACjB,GACd,OACE,qBAAKkB,MAAO,CAAEC,UAAW,SAAWC,OAAO,uBAAwBC,OAAO,UAA1E,SACGrB,EAAMsB,YCgDEC,G,wDA5Cb,aAAe,IAAD,8BACZ,gBAgBFC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAhB1C,EAAKC,MAAQ,CACXtB,OAAQ,GACRmB,YAAa,IAJH,E,gEASO,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAElB,OAAQ2B,OACzCC,QAAQC,IAAIC,KAAKR,MAAMtB,U,+BAQf,IAAD,OACD+B,EAAiBD,KAAKR,MAAMtB,OAAOgC,QAAO,SAAAC,GAC9C,OAAOA,EAAMvC,KAAKwC,cAAcC,SAAS,EAAKb,MAAMH,YAAYe,kBAGlE,OAAiC,IAA7BJ,KAAKR,MAAMtB,OAAOoC,OACb,4CAGL,gCACE,oBAAIxC,UAAU,KAAd,yBACA,uBACA,cAAC,EAAD,CAAWS,aAAcyB,KAAKd,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,CAAUhB,OAAQ+B,MAEpB,oBAAInC,UAAU,KAAd,kD,GAtCQyC,c,MCFlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,qBAAK5C,UAAU,KAAf,SACE,cAAC,EAAD,QAGJ6C,SAASC,eAAe,W","file":"static/js/main.0493ac8c.chunk.js","sourcesContent":["import React, { Fragment }  from 'react';\r\n// import ReactDOM from 'react-dom';\r\n\r\nconst Card = (props) => {\r\n  const { id, name, email } = props;\r\n  return (\r\n    <Fragment>\r\n      <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n      <img src={`https://robohash.org/${id}?200*200`} alt='robot' />\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n\r\n","// import { robots } from \"./robots\";\r\nimport React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n  return (\r\n    <div>\r\n      {\r\n        robots.map((user, i) => {\r\n          return <Card\r\n            key={i}\r\n            id={robots[i].id}\r\n            name={robots[i].name}\r\n            email={robots[i].email} />\r\n        })\r\n      }\r\n    </div>\r\n  ); \r\n}\r\n\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchChange}) => {\r\n  return (\r\n    <div className='pa2'>\r\n      <input\r\n        className='pa3 ba b--green bg-lightest-blue tc'\r\n        type='search'\r\n        placeholder='Search Robots'\r\n        onChange={searchChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div style={{ overflowY: 'scroll' , border:'1px solid transprent', height:'1000px'  }} >\r\n      {props.children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\n// import { robots } from './robots';\r\nimport Scroll from '../components/Scroll';\r\nimport './App.css';\r\n\r\n// constructing the App component and declaring states in contructor\r\nclass App extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      robots: [],\r\n      searchField: ''\r\n    }\r\n  }\r\n\r\n  // as soon as APP load the component will fetch data, then transform the response in json, and set the state with new datas.\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n      .then(response => response.json())\r\n      .then(users => this.setState({ robots: users }));\r\n    console.log(this.state.robots);\r\n  }\r\n\r\n\r\n  onSearchChange = (event) => {\r\n    this.setState({ searchField: event.target.value })\r\n  }\r\n\r\n  render() {\r\n    const filteredRobots = this.state.robots.filter(robot => {\r\n      return robot.name.toLowerCase().includes(this.state.searchField.toLowerCase())\r\n    })\r\n\r\n    if (this.state.robots.length === 0) {\r\n      return <h1>Loading...</h1>\r\n    } else {\r\n      return (\r\n        <div>\r\n          <h1 className=\"f1\">Robofriendz</h1>\r\n          <hr></hr>\r\n          <SearchBox searchChange={this.onSearchChange} />\r\n          <Scroll>\r\n            <CardList robots={filteredRobots} />\r\n          </Scroll>\r\n          <h3 className=\"f4\">Made in Dunkerque by Dhagnere</h3>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <div className='tc'>\n      <App />\n    </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}